---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: podtrackers.networking.aurora.gc.ca
spec:
  group: networking.aurora.gc.ca
  names:
    kind: PodTracker
    listKind: PodTrackerList
    plural: podtrackers
    singular: podtracker
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: PodTracker is the Schema for the podtrackers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PodTrackerSpec defines configuration options for the PodTracker
              controller
            properties:
              backendWriterConfig:
                description: "BackendWriterConfig configures one or many BackendWriter
                  for PodTracker to use A BackendWriter will take the structured PodInfo
                  from pod create/delete events and transforms and writes them to
                  some log/output backend \n Currently, the following backends are
                  supported: - stdout: writes all data to stdout on the controller
                  pod"
                properties:
                  stdout:
                    description: StdoutConfig is a concrete way to configure the StdoutWriter
                    properties:
                      enabled:
                        type: boolean
                    required:
                    - enabled
                    type: object
                type: object
              nsToWatch:
                description: NSToWatch is a list of namespaces where Pods should be
                  watched and logged. If empty, PodTracker will watch all namespaces
                items:
                  type: string
                type: array
            type: object
          status:
            description: PodTrackerStatus defines the observed state of PodTracker
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
